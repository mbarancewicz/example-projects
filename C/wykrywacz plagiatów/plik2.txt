Linux zawiera interfejs wiersza poleceñ (CLI) jako czêœæ funkcji przejêtych z Uniksa. Dystrybucje wyspecjalizowane na serwery lub administracjê mog¹ u¿ywaæ wiersza poleceñ jako jedynego interfejsu. Nieobecnoœæ interfejsu graficznego (GUI) pozwala na zminimalizowanie wykorzystywanych zasobów systemowych. Maszyny z Linuksem mog¹ równie dobrze dzia³aæ bez pod³¹czonego monitora. Aby administrator móg³ siê na nich zalogowaæ, potrzeba albo zdalnego X11, albo terminal musi byæ uruchomiony z protoko³u takiego, jak SSH lub telnet. W sieciach lokalnych zdalne u¿ywanie X11 jest przewa¿nie akceptowalne, ale na d³u¿sze dystanse operacje te mog¹ zajmowaæ za du¿o czasu. Innym sposobem na zarz¹dzanie systemem bez urz¹dzeñ HID (Human Interface Device) i sieci jest terminal pod³¹czany przez port szeregowy - g³ównie s³u¿¹cy do debugowania i diagnostyki urz¹dzeñ wbudowanych.

Na pocz¹tku wiele operacji wykonywanych w Linuksie wymaga³o u¿ycia wiersza poleceñ. Rozwój dystrybucji przeznaczonych na komputery biurkowe i domowe zmieni³ ten stan rzeczy. Mimo wszystko, wiele podrêczników i tutoriali czêsto podaje mo¿liwoœæ rozwi¹zania problemu z wiersza poleceñ, nawet gdy mo¿na to zrobiæ, u¿ywaj¹c aplikacji graficznej. Wiersz poleceñ jest uniwersalny w œwiecie Linuksa, gdzie graficzny interfejs na ka¿dej maszynie mo¿e byæ inny. To równie¿ u³atwia wspó³pracê miêdzy Linuksem i innymi maszynami, które równie¿ u¿ywaj¹ wiersza poleceñ, np. Mac OS X. £atwiej jest równie¿ udzieliæ pomocy, gdy operacja ta sprowadza siê do napisania/skopiowania tego, co nale¿y wkleiæ do terminala.

Dobrze zaprojektowane GUI jest ³atwiejsze w u¿yciu dla wiêkszoœci zadañ, lecz bardziej doœwiadczeni u¿ytkownicy mog¹ wci¹¿ preferowaæ liniê komend; naukowcy, in¿ynierowie i twórcy oprogramowania najczêœciej u¿ywaj¹ w³aœnie terminala. Wiele wa¿nych programów nie ma GUI. Wiersz poleceñ jest wyposa¿ony w automat, pozwalaj¹cy na kilkukrotne lub opóŸnione wype³nianie zadañ i naturalnym procesem jest to, ¿e komenda wykonuj¹ca pewne zadanie jest wpierw wydawana bezpoœrednio, a potem u¿ywana ponownie w skrypcie zapewniaj¹c automatyzacjê.

Graficzny i tekstowy interfejs mog¹ równie¿ nawzajem siê uzupe³niaæ. Jest wiele graficznych emulatorów terminali, np. xterm, rxvt, aterm, gnome-terminal i konsole. X11 potrafi zapewniæ komunikacjê miêdzy tymi programami a wierszem poleceñ. Co wiêcej, XFCE, KDE oraz GNOME oferuj¹ narzêdzie D-BUS, które zapewnia wiêksz¹ integracjê aplikacji graficznych z terminalem.